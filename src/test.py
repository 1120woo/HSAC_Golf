import numpy as np
import tensorflow as tf
import  tensorflow_probability as tfp
# a = [-0.6176708,  -0.635116 ,  -0.4336878  -0.62621456 -0.6287745 , -0.7654619
#  -0.58772075, -0.78147805 ,-0.6151742 , -0.76217467, -0.6060197 ,  1.401336
#  -0.62788266, -0.6047985 , -0.5857498  ,-0.5549746  , 1.4043236,  -0.6144627
#  -0.974108,   -0.94638044, -0.965638   ,-0.41800866 , 1.3686521 , -0.6072211
#  -0.58793426, -0.59342927 ,-0.73989815 ,-0.78097534, -0.61535496 ,-0.6056795
#  -0.78131884, -0.61205524 , 0.85088134,  1.4782933  ,-0.6061567  ,-0.777423
#  -0.76782787,  1.340278   ,-0.6102858 , -0.6138115 , -0.59577537, -0.60121447
#  -0.61769,    -0.60050625 ,-0.6103501 , -0.60292    ,-0.6091133 , -0.7660076
#  -0.42601365, -0.60989195 ,-0.607522  , -0.5912588 ,  1.3585421 , -0.7423791
#  -0.59460217, -0.59808916 ,-0.5977444,  -0.6140136 , -0.5921962 , -0.5949828
#  -0.6032865 , -0.59937006 ,-0.6052281  , 1.3699546 ]
#
# n = np.asarray(a)
#
# print(n.sum())

a_c = tf.convert_to_tensor([0, 0, 0.35, 0, 0,
                            0, 0, 0.15, 0, 0,
                            0, 0, 0.3, 0, 0,
                            0, 0, 0.2, 0, 0],dtype=tf.float32)

dist = tfp.distributions.Categorical(probs=a_c)

for a in range(10) :
    action_d = dist.sample(seed=None)
    print((action_d))